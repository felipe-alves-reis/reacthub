{"version":3,"sources":["pages/Main/styles.js","components/Container/index.js","services/api.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["Form","styled","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Container","div","api","axios","create","baseURL","Main","state","newRepo","repositories","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","get","response","data","name","full_name","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","Repository","issues","match","repoName","decodeURIComponent","params","Promise","all","per_page","src","owner","avatar_url","alt","login","description","issue","String","id","user","href","html_url","title","labels","label","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b17e2a7.chunk.js","sourcesContent":["import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n\n  input {\n    flex: 1;\n    border: 1px solid #eee;\n    padding: 10px 15px;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background: #7159c1;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props =>\n    props.loading &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li {\n    padding: 15px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    & + li {\n      border-top: 1px solid #eee;\n    }\n\n    a {\n      color: #7159c1;\n      text-decoration: none;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport default Container;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import React, { Component } from 'react';\n\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { Form, SubmitButton, List } from './styles';\nimport Container from '../../components/Container';\n\nimport api from '../../services/api';\n\nclass Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n  };\n\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    const { newRepo, repositories } = this.state;\n\n    const response = await api.get(`/repos/${newRepo}`);\n\n    const data = {\n      name: response.data.full_name,\n    };\n\n    this.setState({\n      repositories: [...repositories, data],\n      newRepo: '',\n      loading: false,\n    });\n  };\n\n  render() {\n    const { newRepo, loading, repositories } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositories\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Add repository\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : (\n              <FaPlus color=\"#FFF\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Details\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #fff;\n  font-size: 30px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const Owner = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  a {\n    color: #7159c1;\n    font-size: 16px;\n    text-decoration: none;\n  }\n\n  img {\n    width: 120px;\n    border-radius: 50%;\n    margin-top: 20px;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-top: 10px;\n  }\n\n  p {\n    margin-top: 5px;\n    font-size: 14px;\n    color: #666;\n    line-height: 1.4;\n    text-align: center;\n    max-width: 400px;\n  }\n`;\n\nexport const IssueList = styled.ul`\n  padding-top: 30px;\n  margin-top: 30px;\n  border-top: 1px solid #eee;\n  list-style: none;\n\n  li {\n    display: flex;\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    & + li {\n      margin-top: 10px;\n    }\n\n    img {\n      width: 36px;\n      height: 36px;\n      border-radius: 50%;\n      border: 2px solid #eee;\n    }\n\n    div {\n      flex: 1;\n      margin-left: 15px;\n\n      strong {\n        font-size: 16px;\n\n        a {\n          text-decoration: none;\n          color: #333;\n\n          &:hover {\n            color: #7159c1;\n          }\n        }\n\n        span {\n          background: #eee;\n          color: #333;\n          border-radius: 2px;\n          font-size: 12px;\n          font-weight: 600;\n          height: 20px;\n          padding: 3px 4px;\n          margin-left: 10px;\n        }\n      }\n\n      p {\n        margin-top: 5px;\n        font-size: 12px;\n        color: #999;\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList } from './styles.js';\n\nclass Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return <Loading>Loading</Loading>;\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Back to repositories</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n      </Container>\n    );\n  }\n}\n\nexport default Repository;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/repository/:repository\" exact component={Repository} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background: #7159c1;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}